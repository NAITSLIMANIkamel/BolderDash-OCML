(***********************)
(* Projet 2I008, 18/19 *)
(***********************)

open Structures

(** Ce fichier contient les définitions des types principaux du jeu *)


type cell =
    Empty|Stone|Boulder|Dirt|TODO

(* let *)
string Diamonts_of_cell c =
  match c with
    Empty->"vide"
  |Stone->"bougée"
  |Boulder->"rocher circulair"
  |Dirt->"terre"
  |Diamonts->"diamonts"

let pp_cell fmt cell = Format.pp_print_string fmt (string_of_cell cell)

type map =
  cell Matrix.t

let pp_map : Format.formatter -> map -> unit = Matrix.pp pp_cell

type game ={map:map;player:(int*int);diamonds:int }


let print_game (fmt: Format.formatter) (g: game): unit =
  Format.fprintf fmt "@[<v>@[<v 2>{@,map: %a@,player: (%d, %d)@,}@]@,@]"
    pp_map g.map
    (fst g.player) (snd g.player)

type dir =N|S|E|W


let string_of_dir (d: dir) =
match d with
  N->"Nord"
|S->"Sud"
|E->"Est"
|W->"West"

let pp_dir fmt dir = Format.pp_print_string fmt (string_of_dir dir)
